// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.23.4
// source: search.proto

package user_interaction

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UserInteractionClient is the client API for UserInteraction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UserInteractionClient interface {
	UserSearch(ctx context.Context, in *UserSearchMessage, opts ...grpc.CallOption) (*UserSearchMessageResponse, error)
}

type userInteractionClient struct {
	cc grpc.ClientConnInterface
}

func NewUserInteractionClient(cc grpc.ClientConnInterface) UserInteractionClient {
	return &userInteractionClient{cc}
}

func (c *userInteractionClient) UserSearch(ctx context.Context, in *UserSearchMessage, opts ...grpc.CallOption) (*UserSearchMessageResponse, error) {
	out := new(UserSearchMessageResponse)
	err := c.cc.Invoke(ctx, "/user_interaction.UserInteraction/UserSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserInteractionServer is the server API for UserInteraction service.
// All implementations must embed UnimplementedUserInteractionServer
// for forward compatibility
type UserInteractionServer interface {
	UserSearch(context.Context, *UserSearchMessage) (*UserSearchMessageResponse, error)
	mustEmbedUnimplementedUserInteractionServer()
}

// UnimplementedUserInteractionServer must be embedded to have forward compatible implementations.
type UnimplementedUserInteractionServer struct {
}

func (UnimplementedUserInteractionServer) UserSearch(context.Context, *UserSearchMessage) (*UserSearchMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserSearch not implemented")
}
func (UnimplementedUserInteractionServer) mustEmbedUnimplementedUserInteractionServer() {}

// UnsafeUserInteractionServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UserInteractionServer will
// result in compilation errors.
type UnsafeUserInteractionServer interface {
	mustEmbedUnimplementedUserInteractionServer()
}

func RegisterUserInteractionServer(s grpc.ServiceRegistrar, srv UserInteractionServer) {
	s.RegisterService(&UserInteraction_ServiceDesc, srv)
}

func _UserInteraction_UserSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserSearchMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInteractionServer).UserSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_interaction.UserInteraction/UserSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInteractionServer).UserSearch(ctx, req.(*UserSearchMessage))
	}
	return interceptor(ctx, in, info, handler)
}

// UserInteraction_ServiceDesc is the grpc.ServiceDesc for UserInteraction service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UserInteraction_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "user_interaction.UserInteraction",
	HandlerType: (*UserInteractionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserSearch",
			Handler:    _UserInteraction_UserSearch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "search.proto",
}
